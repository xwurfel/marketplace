@using market.Data.Contracts.UnitsOfWork
@using market.Host.Models.Products;
@model ProductModel

@{
    ViewData["Title"] = "Index";
}

<form method="post" asp-controller="Product" asp-action="Add">
    <div class="input-group mb-3">
        
      <input type="text" class="form-control" placeholder="Name" aria-label="Name" aria-describedby="basic-addon1" id="Name" name="Name">
    </div>

    <div class="input-group mb-3">
      <span class="input-group-text">$</span>
      
      <input type="text" class="form-control" aria-label="Price" id="Price" name="Price">
      <span class="input-group-text">.00</span>
    </div>

    <div class="input-group">
        <span class="input-group-text">Description</span>
       
      <textarea class="form-control" aria-label="Description" id="Description" name="Description"></textarea>
    </div>

    <br />

    <div class="input-group">
            Category :
        @Html.DropDownListFor(model => model.Categories, ViewBag.Categories as SelectList, new {@class="form-control", @multiple = "multiple", @id = "Categories", @name = "Categories"})
        @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" }) 
    </div>

    
    
    <br />

    <input type="submit" class="btn btn-primary" value="Submit"/>
</form>
@*
<br />

<h2>Index</h2>

<script type="text/javascript">
    $(document).ready(function() {
        $("#btnSave").click(function() {
            SaveItem();
        });
    });

    function ResetItem() {
        $("#CategoryId").val("1");
       
        $("#ItemName").val("");
        $("#Description").val("");
        $("#ItemPrice").val("");
        $("#ImagePath").val("");
    }

    function SaveItem() {
        var formData = new FormData();
        formData.append("CategoryId", $("#CategoryId").val());
       
        formData.append("ItemName", $("#ItemName").val());
        formData.append("Description", $("#Description").val());
        formData.append("ItemPrice", $("#ItemPrice").val());
        formData.append("ImagePath", $("#ImagePath").get(0).files[0]);

        $.ajax({
            async: true,
            dataType: 'JSON',
            type: 'POST',
            contentType: false,
            processData: false,
            url: '/Item/Index',
            data: formData,
            success: function (data) {
                if (data.Success)
                {
                    alert(data.Message);
                    ResetItem();
                }
            },
            error: function() {
                alert("There is some problem to add Item.");
            }
        });
    }

</script>

<div class="container">
    <div class="col-md-4">
        <div class="form-group">
            Category : 
            @Html.DropDownListFor(model => model.Categories, new SelectList(Model.Categories, "Value", "Text"),
                new {@class = "form-control"})
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="form-group">
            Item Name : 
            @Html.TextBoxFor(model => model.Name, new {@class = "form-control", autocomplete = "Off" })
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="form-group">
            Description : 
            @Html.TextBoxFor(model => model.Description, new {@class = "form-control", autocomplete = "Off" })
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="form-group">
            Item Price : 
            @Html.TextBoxFor(model => model.Price, new {@class = "form-control", autocomplete = "Off" })
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="form-group">
            Item Price :
            @Html.TextBoxFor(model => model.ImagePath, new { type = "file", @class = "form-control" })
        </div>
    </div>
    
    <div>
        <input type="button" value="Save" name="save" class="btn btn-primary" id ="btnSave"/>
        &nbsp;
        <input type="button" value="Reset" name="reset" class="btn btn-danger"/>
    </div>
</div>
*@